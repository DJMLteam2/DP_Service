{{>layouts/detailHeader}}
<div class="wrapper">
    <div class="three">
        <a href="/" id="header"><h1>My Travel</h1></a>
    </div>
<div class="product">
    {{#travelDto}}
    <div class="detail" style="float:left;">
        <div class="header">
        <h1>{{spotTitle}}</h1>
    </div>
    <div class="content">
        <Span class="price">{{spotCatchTitle}}</Span>
        <div class="text-wrapper">
            <span class="text" id = "description"><p>{{spotOverview}}</p></span>
            <!-- 더보기, 줄이기 텍스트 -->
            <span class="more-text">더보기</span>
            <span class="less-text">줄이기</span>
        </div>
        <br>
        <span>{{spotDetail}}</span>
    </p>
    <div class="property">
        <div class="item">
            <div class="key">전화번호 : </div>
            <div class="value">{{spotInfoCenter}}</div>
        </div>
        <div class="item">
            <div class="key">주소 : </div>
            <div class="value">{{spotAddr}}</div>
        </div>
        </div>
    </div>
    <div class="footer">
        <button id="openMap" data-spot-id="{{spotId}}" class="btn btn-dark btn-block" onclick="openMap(this)">지도 보기</button>
    </div>
    </div>
    <div class="image" style="float:right;">
        <img id="dynamicImage" src="{{spotImgPath}}"/>
        <div class="arrows">
    </div>
    </div>
    {{/travelDto}}
</div>

<script>
    function openMap(button) {
        // 버튼의 data-spot-id 속성 값 읽기
        let spotId = button.getAttribute('data-spot-id');
    
        let popOption = "width=650px, height=550px, top=300px, left=300px, scrollbars=no";
        let openUrl = "/travel/search/map/" + spotId;
    
        window.open(openUrl, "pop", popOption);
        console.log("메시지: 클릭됨");
    }
    const textWrapper = document.querySelector('.text-wrapper');
    const text = document.querySelector('.text');
    const moreText = document.querySelector('.more-text');
    const lessText = document.querySelector('.less-text');

    // 더보기 텍스트 클릭시 이벤트
    moreText.addEventListener('click', () => {

    moreText.style.display = 'none'; // 더보기 텍스트 삭제
    lessText.style.display = 'inline-block'; // 줄이기 텍스트 표시
    text.style.display = 'inline-block'; // 텍스트의 속성을 -webkit-box에서 일반 inline-block 으로 변경
    });

    // 줄이기 텍스트 클릭시 이벤트
    lessText.addEventListener('click', () => {

    lessText.style.display = 'none'; // 줄이기 텍스트 삭제
    moreText.style.display = 'inline-block'; // 더보기 텍스트 표시
    text.style.display = '-webkit-box'; // 텍스트의 속성을 다시 -webkit-box로 표시
    });
</script>